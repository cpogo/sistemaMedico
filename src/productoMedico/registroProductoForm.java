/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package productoMedico;

import ConexionPaciente.registrarPaciente_Conexion;
import ConexionProducto.RegistroProductoConexion;
import conexiondb.conexiondb;
import java.sql.Connection;
import java.sql.Date;
import java.util.Calendar;
import javax.swing.JOptionPane;

/**
 *
 * @author j3s
 */
public class registroProductoForm extends javax.swing.JFrame {

    public static String MensajeRegistrarProducto = "";
    public static String MensajeRegistrarProducto1 = "";
    public static String MensajeRegistrarProducto2 = "";
    public static String MensajeRegistrarProducto3 = "";
    public static String MensajeRegistrarProducto4 = "";
    public static String MensajeRegistrarProducto5 = "";
    public static String MensajeRegistrarProducto6 = "";
    public static String MensajeRegistrarProducto7 = "";
    public static String MensajeRegistrarProducto8 = "";
    public static String MensajeRegistrarProducto9 = "";
    public static String MensajeRegistrarProducto10 = "";
    public static String MensajeRegistrarProducto11 = "";
    
    public registroProductoForm() {
        initComponents();
        Connection c = conexiondb.getDBConnection();
        int numCodigo = RegistroProductoConexion.getMaxId_producto(c)+1;
        lblCodigo.setText(String.valueOf(numCodigo));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblCodigo = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        btnRegistro = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtMarca = new javax.swing.JTextField();
        txtDescripcion = new javax.swing.JTextField();
        txtPosologia = new javax.swing.JTextField();
        txtCosto = new javax.swing.JTextField();
        txtCantidadDisp = new javax.swing.JTextField();
        txtMes = new javax.swing.JTextField();
        txtDia = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtAño = new javax.swing.JTextField();
        cbopresentacion = new javax.swing.JComboBox();
        cboAdmin = new javax.swing.JComboBox();
        registroProveedor = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });

        jLabel13.setText("Descripción:");

        jLabel14.setText("Código de presentación:");

        jLabel15.setText("Posología:");

        jLabel16.setText("Código Administración:");

        jLabel8.setText("Nombre:");

        jLabel17.setText("Costo:");

        jLabel1.setFont(new java.awt.Font("WenQuanYi Micro Hei", 0, 24)); // NOI18N
        jLabel1.setText("Nuevo Producto Médico");

        jLabel2.setText("Código del producto:");

        lblCodigo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setText("Marca:");

        jLabel12.setText("Fecha de caducidad:");

        btnRegistro.setText("Registrar");
        btnRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistroActionPerformed(evt);
            }
        });

        jLabel18.setText("Cantidad disponible:");

        txtNombre.setBackground(new java.awt.Color(254, 254, 254));
        txtNombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombreFocusLost(evt);
            }
        });

        txtMarca.setBackground(new java.awt.Color(254, 254, 254));
        txtMarca.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMarcaFocusLost(evt);
            }
        });

        txtDescripcion.setBackground(new java.awt.Color(254, 254, 254));
        txtDescripcion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDescripcionFocusLost(evt);
            }
        });

        txtPosologia.setBackground(new java.awt.Color(254, 254, 254));
        txtPosologia.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPosologiaFocusLost(evt);
            }
        });

        txtCosto.setBackground(new java.awt.Color(254, 254, 254));
        txtCosto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCostoFocusLost(evt);
            }
        });
        txtCosto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCostoKeyReleased(evt);
            }
        });

        txtCantidadDisp.setBackground(new java.awt.Color(254, 254, 254));
        txtCantidadDisp.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCantidadDispFocusLost(evt);
            }
        });
        txtCantidadDisp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCantidadDispKeyReleased(evt);
            }
        });

        txtMes.setBackground(new java.awt.Color(254, 254, 254));
        txtMes.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMesFocusLost(evt);
            }
        });
        txtMes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMesKeyReleased(evt);
            }
        });

        txtDia.setBackground(new java.awt.Color(254, 254, 254));
        txtDia.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDiaFocusLost(evt);
            }
        });
        txtDia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDiaKeyReleased(evt);
            }
        });

        jLabel5.setText("Mes:");

        jLabel9.setText("Año:");

        jLabel4.setText("Día:");

        txtAño.setBackground(new java.awt.Color(254, 254, 254));
        txtAño.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAñoFocusLost(evt);
            }
        });
        txtAño.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAñoKeyReleased(evt);
            }
        });

        cbopresentacion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Comprimido", "Cápsula", "Jarabe", "Suspensión", "Papelillos", "Enemas", "Supositorios", "Pomada", "Inhalador Bucal", "Inhalador Nasal", "Inyectables" }));

        cboAdmin.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Oral", "Sublingual", "Gastroentérica", "Rectal", "Intradérmica", "Respiratoria", "Oftálmica", "Transdérmica" }));

        registroProveedor.setText("Registrar Proveedor");
        registroProveedor.setEnabled(false);
        registroProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registroProveedorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16)
                            .addComponent(jLabel13)
                            .addComponent(jLabel3))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtDescripcion)
                                        .addGap(143, 143, 143))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(99, 99, 99)
                                                    .addComponent(txtMes, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jLabel9))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel4)
                                                    .addGap(2, 2, 2)
                                                    .addComponent(txtDia, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jLabel5)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(cboAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(27, 27, 27)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtAño, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap(42, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtPosologia, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(cbopresentacion, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel18))
                                .addGap(42, 42, 42)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCantidadDisp, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCosto, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel8)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(39, 39, 39)
                                .addComponent(lblCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(157, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(btnRegistro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(registroProveedor)
                .addGap(64, 64, 64))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCodigo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel13))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(cbopresentacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPosologia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(cboAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txtMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel9)
                            .addComponent(txtAño, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(txtCosto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel17)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCantidadDisp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegistro)
                    .addComponent(registroProveedor))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreFocusLost
        String nombre = txtNombre.getText();
        MensajeRegistrarProducto1 = "";
        
        if(nombre.equals(""))
            MensajeRegistrarProducto1 += "El campo del nombre del producto no puede estar vacío\n";
        
        if(nombre.length() > 20)
            MensajeRegistrarProducto1 += "El campo del nombre del producto no puede tener una longitud mayor que 20\n";
    }//GEN-LAST:event_txtNombreFocusLost

    private void txtMarcaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMarcaFocusLost
        String marca = txtMarca.getText();
        MensajeRegistrarProducto2 = "";
        
        if(marca.equals(""))
            MensajeRegistrarProducto2 += "El campo de la marca del producto no puede estar vacío\n";
        
        if(marca.length() > 20)
            MensajeRegistrarProducto2 += "El campo de la marca del producto no puede tener una longitud mayor que 20\n";
    }//GEN-LAST:event_txtMarcaFocusLost

    private void txtDescripcionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescripcionFocusLost
        String desc = txtDescripcion.getText();
        MensajeRegistrarProducto3 = "";
        
        if(desc.equals(""))
            MensajeRegistrarProducto3 += "El campo de la descripción del producto no puede estar vacío\n";
        
        if(desc.length() > 100)
            MensajeRegistrarProducto3 += "El campo de la descripción del producto no puede tener una longitud mayor que 100\n";
    }//GEN-LAST:event_txtDescripcionFocusLost

    private void txtCostoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCostoKeyReleased

    }//GEN-LAST:event_txtCostoKeyReleased

    private void txtCantidadDispKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadDispKeyReleased

    }//GEN-LAST:event_txtCantidadDispKeyReleased

    private void txtMesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMesKeyReleased

    }//GEN-LAST:event_txtMesKeyReleased

    private void txtDiaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDiaKeyReleased
        
    }//GEN-LAST:event_txtDiaKeyReleased

    private void btnRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistroActionPerformed
        String nombre = txtNombre.getText();
        String marca = txtMarca.getText();
        String descripccion = txtDescripcion.getText();
        String codigoPres = (String) cbopresentacion.getSelectedItem();
        String posologia = txtPosologia.getText();
        String codigoAdmin = (String)cboAdmin.getSelectedItem();
        String dia = txtDia.getText();
        String mes = txtMes.getText();
        String año = txtAño.getText();
        String costo = txtCosto.getText();
        String cantidad=txtCantidadDisp.getText();
        
        MensajeRegistrarProducto = "";
        MensajeRegistrarProducto = MensajeRegistrarProducto1 + MensajeRegistrarProducto2 + MensajeRegistrarProducto3 + MensajeRegistrarProducto4 + MensajeRegistrarProducto5 + MensajeRegistrarProducto6 + MensajeRegistrarProducto7 + MensajeRegistrarProducto8 + MensajeRegistrarProducto9 + MensajeRegistrarProducto10 + MensajeRegistrarProducto11;
        
        if (nombre.equals("") && MensajeRegistrarProducto1.equals("")){
            MensajeRegistrarProducto += "El campo del nombre del producto no puede estar vacío\n";
            txtNombre.setBackground(java.awt.Color.PINK);
        }else{
            if(!MensajeRegistrarProducto1.equals(""))
                txtNombre.setBackground(java.awt.Color.PINK);
            else
                txtNombre.setBackground(java.awt.Color.WHITE);
        }
        
        if (marca.equals("") && MensajeRegistrarProducto2.equals("")){
            MensajeRegistrarProducto += "El campo de la marca del producto no puede estar vacío\n";
            txtMarca.setBackground(java.awt.Color.PINK);
        }else{
            if(!MensajeRegistrarProducto2.equals(""))
                txtMarca.setBackground(java.awt.Color.PINK);
            else
                txtMarca.setBackground(java.awt.Color.WHITE);
        }
        
        if (descripccion.equals("") && MensajeRegistrarProducto3.equals("")){
            MensajeRegistrarProducto += "El campo de la descripción del producto no puede estar vacío\n";
            txtDescripcion.setBackground(java.awt.Color.PINK);
        }else{
            if(!MensajeRegistrarProducto3.equals(""))
                txtDescripcion.setBackground(java.awt.Color.PINK);
            else
                txtDescripcion.setBackground(java.awt.Color.WHITE);
        }
        
                
        if (posologia.equals("") && MensajeRegistrarProducto5.equals("")){
            MensajeRegistrarProducto += "El campo de la posología del producto no puede estar vacío\n";
            txtPosologia.setBackground(java.awt.Color.PINK);
        }else{
            if(!MensajeRegistrarProducto5.equals(""))
                txtPosologia.setBackground(java.awt.Color.PINK);
            else
                txtPosologia.setBackground(java.awt.Color.WHITE);
        }
        
                
        if (dia.equals("") && MensajeRegistrarProducto7.equals("")){
            MensajeRegistrarProducto += "El campo día de la fecha de caducidad no puede estar vacío\n";
            txtDia.setBackground(java.awt.Color.PINK);
        }else{
            if(!MensajeRegistrarProducto7.equals(""))
                txtDia.setBackground(java.awt.Color.PINK);
            else
                txtDia.setBackground(java.awt.Color.WHITE);
        }
        
        if (mes.equals("") && MensajeRegistrarProducto8.equals("")){
            MensajeRegistrarProducto += "El campo mes de la fecha de caducidad no puede estar vacío\n";
            txtMes.setBackground(java.awt.Color.PINK);
        }else{
            if(!MensajeRegistrarProducto8.equals(""))
                txtMes.setBackground(java.awt.Color.PINK);
            else
                txtMes.setBackground(java.awt.Color.WHITE);
        }
        
        if (año.equals("") && MensajeRegistrarProducto9.equals("")){
            MensajeRegistrarProducto += "El campo año de la fecha de caducidad no puede estar vacío\n";
            txtAño.setBackground(java.awt.Color.PINK);
        }else{
            if(!MensajeRegistrarProducto9.equals(""))
                txtAño.setBackground(java.awt.Color.PINK);
            else
                txtAño.setBackground(java.awt.Color.WHITE);
        }
        
        if (costo.equals("") && MensajeRegistrarProducto10.equals("")){
            MensajeRegistrarProducto += "El campo del costo del producto no puede estar vacío\n";
            txtCosto.setBackground(java.awt.Color.PINK);
        }else{
            if(!MensajeRegistrarProducto10.equals(""))
                txtCosto.setBackground(java.awt.Color.PINK);
            else
                txtCosto.setBackground(java.awt.Color.WHITE);
        }
        
        if (cantidad.equals("") && MensajeRegistrarProducto11.equals("")){
            MensajeRegistrarProducto += "El campo de la cantidad del producto no puede estar vacío\n";
            txtCantidadDisp.setBackground(java.awt.Color.PINK);
        }else{
            if(!MensajeRegistrarProducto11.equals(""))
                txtCantidadDisp.setBackground(java.awt.Color.PINK);
            else
                txtCantidadDisp.setBackground(java.awt.Color.WHITE);
        }
        
        int codAdmin=0,codPres=0;
        switch(codigoAdmin)
        {
            case "Oral":
                codAdmin=1;
                break;
            case "Sublingual":
                codAdmin=2;
                break;
                
            case "Gastroentérica":
                codAdmin=3;
                break;
            case "Rectal":
                codAdmin=4;
                break;
            case "Intradérmica":
                codAdmin=5;
                break;
                
            case "Respiratoria":
                codAdmin=6;
                break;
            case "Oftálmica":
                codAdmin=7;
                break;
            case "Transdérmica":
                codAdmin=8;
                break;
            }
        switch(codigoPres)
        {
            case "Comprimido":
                codPres=1;
                break;
            case "Cápsula":
                codPres=2;
                break;
                
            case "Jarabe":
                codPres=3;
                break;
            case "Suspensión":
                codPres=4;
                break;
            case "Papelillos":
                codPres=5;
                break;
                
            case "Enemas":
                codPres=6;
                break;
            case "Supositorios":
                codPres=7;
                break;
            case "Pomada":
                codPres=8;
                break;
                
            case "Inhalador Bucal":
                codPres=9;
                break;
            case "Inhalador Nasal":
                codPres=10;
                break;
            case "Inyectables":
                codPres=11;
                break;
            }
        
        
        
       
        if(MensajeRegistrarProducto.equals("")){
            {
            
            Connection c = conexiondb.getDBConnection();
            
            Date f = new Date(Integer.parseInt(año)-1900,Integer.parseInt(mes)-1,Integer.parseInt(dia));
            RegistroProductoConexion.registrarProducto(c,nombre,marca,descripccion,codPres,posologia,codAdmin,f, Float.parseFloat(costo),Integer.parseInt(cantidad));
            JOptionPane.showMessageDialog(rootPane, "Registro exitoso", "Mensaje", 1);
            btnRegistro.setEnabled(false);
            registroProveedor.setEnabled(true);
            
            
            }
        }else
            JOptionPane.showMessageDialog(rootPane, MensajeRegistrarProducto, "Advertencia", 2);
        
        
    }//GEN-LAST:event_btnRegistroActionPerformed

    private void txtAñoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAñoKeyReleased
        
    }//GEN-LAST:event_txtAñoKeyReleased

    private void txtPosologiaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPosologiaFocusLost
        String pos = txtPosologia.getText();
        MensajeRegistrarProducto5 = "";
        
        if(pos.equals(""))
            MensajeRegistrarProducto5 += "El campo de la posología del producto no puede estar vacío\n";
        
        if(pos.length() > 50)
            MensajeRegistrarProducto5 += "El campo de la posología del producto no puede tener una longitud mayor que 50\n";
    }//GEN-LAST:event_txtPosologiaFocusLost

    private void txtDiaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDiaFocusLost
        String dia = txtDia.getText();
        int numdia = 0;
        String mes = txtMes.getText();
        String año = txtAño.getText();
        Calendar actual = Calendar.getInstance();
        int añoActual = actual.get(Calendar.YEAR);
        int diaActual = actual.get(Calendar.DAY_OF_MONTH);
        int mesActual = actual.get(Calendar.MONTH) + 1;
        MensajeRegistrarProducto7 = "";
        
        if (dia.equals(""))
            MensajeRegistrarProducto7 += "El campo día de la fecha de caducidad no puede estar vacío\n";
        
        if(!esNumero(dia))
            MensajeRegistrarProducto7 += "El día de la fecha de caducidad no puede contener espacios ni caracteres alfabéticos\n";
        else{
            if(!dia.equals("")){
                numdia = Integer.parseInt(dia);
                if(numdia < 1 || numdia > 31) // Aquí falta la validación de los meses
                    MensajeRegistrarProducto7 += "El día solo tiene dígitos entre 1 - 31\n";// Aquí falta la validación de los meses
            }
        }
        
        if(!dia.equals("") && !mes.equals("") && !año.equals("") && esNumero(mes) && esNumero(año) && esNumero(dia) && (Integer.parseInt(mes)<12 && Integer.parseInt(mes)>0)){
            if(Integer.parseInt(año) == añoActual && Integer.parseInt(mes) == mesActual){
                if(Integer.parseInt(dia) < diaActual){
                    MensajeRegistrarProducto7 += "Día inválido: Se ha escogido un día anterior al actual\n";
                }
            }else if(Integer.parseInt(año) == añoActual && Integer.parseInt(mes) > mesActual){
                if(Integer.parseInt(dia) < 0 || Integer.parseInt(dia) > 31){
                    MensajeRegistrarProducto7 += "Día Inválido: Solo puede tomar el valor de 1 - 31\n";
                }
            }else if(Integer.parseInt(año) > añoActual){
                if(Integer.parseInt(dia) < 0 || Integer.parseInt(dia) > 31){
                    MensajeRegistrarProducto7 += "Día Inválido: Solo puede tomar el valor de 1 - 31\n";
                }
            }
        }
    }//GEN-LAST:event_txtDiaFocusLost

    private void txtMesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMesFocusLost
        String mes = txtMes.getText();
        String año = txtAño.getText();
        String dia = txtDia.getText();
        int nummes = 0;
        Calendar actual = Calendar.getInstance();
        int añoActual = actual.get(Calendar.YEAR);
        int diaActual = actual.get(Calendar.DAY_OF_MONTH);
        int mesActual = actual.get(Calendar.MONTH) + 1;
        MensajeRegistrarProducto8 = "";
        
        if (mes.equals(""))
            MensajeRegistrarProducto8 += "El campo mes de la fecha de caducidad no puede estar vacío\n";
        
        if(!esNumero(mes))
            MensajeRegistrarProducto8 += "El campo mes de la fecha de caducidad no puede contener espacios ni caracteres alfabéticos\n";
        else{
            if(!mes.equals("")){
                nummes = Integer.parseInt(mes);
                if(nummes < 1 || nummes > 12)
                    MensajeRegistrarProducto8 += "El mes solo tiene dígitos entre 1 - 12\n";
            }
        }
        
        if(!año.equals("") && !mes.equals("") && esNumero(año) && esNumero(mes) && (Integer.parseInt(mes)<12 && Integer.parseInt(mes)>0)){
            if(Integer.parseInt(año) == añoActual) {
                if(Integer.parseInt(mes) < mesActual){
                    MensajeRegistrarProducto8 += "Mes inválido: Se ha escogido un mes anterior al actual\n";
                }
            }else if(Integer.parseInt(año) > añoActual){
                if(Integer.parseInt(mes)<1 || Integer.parseInt(mes)>12){
                    MensajeRegistrarProducto8 += "Mes inválido: Solo puede tomar el valor de 1 - 12l\n";
                }
            }
        }
    }//GEN-LAST:event_txtMesFocusLost

    private void txtAñoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAñoFocusLost
        String anio = txtAño.getText();
        String mes = txtMes.getText();
        String dia = txtDia.getText();
        int numanio = 0;
        Calendar actual = Calendar.getInstance();
        int añoActual = actual.get(Calendar.YEAR);
        int diaActual = actual.get(Calendar.DAY_OF_MONTH);
        int mesActual = actual.get(Calendar.MONTH) + 1;
        MensajeRegistrarProducto9 = "";
        
        if (anio.equals(""))
            MensajeRegistrarProducto9 += "El campo año de la fecha de caducidad no puede estar vacío\n";
        
        if(!esNumero(anio))
            MensajeRegistrarProducto9 += "El año de la fecha de caducidad no puede contener espacios ni caracteres alfabéticos\n";
        else{
            if(!anio.equals("")){
                numanio = Integer.parseInt(anio);
                if(numanio < añoActual)
                    MensajeRegistrarProducto9 += "Año no válido\n";
            }
        }
    }//GEN-LAST:event_txtAñoFocusLost

    private void txtCostoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCostoFocusLost
        String costo = txtCosto.getText();
        MensajeRegistrarProducto10 = "";
        if(costo.equals(""))
            MensajeRegistrarProducto10 += "El campo del costo del producto no puede estar vacío\n";
        
    }//GEN-LAST:event_txtCostoFocusLost

    private void txtCantidadDispFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCantidadDispFocusLost
        String cantidad=txtCantidadDisp.getText();
        MensajeRegistrarProducto11 = "";
        if(cantidad.equals(""))
            MensajeRegistrarProducto11 += "El campo de la cantidad del producto no puede estar vacío\n";
        if(!esNumero(cantidad))
            MensajeRegistrarProducto11 += "El campo de la cantidad del producto solo contiene números\n";
    }//GEN-LAST:event_txtCantidadDispFocusLost

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseMoved

    private void registroProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registroProveedorActionPerformed
        ProveedorForm ProveedorForm = new ProveedorForm();
        ProveedorForm.setVisible(true);
    }//GEN-LAST:event_registroProveedorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(registroProductoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(registroProductoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(registroProductoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(registroProductoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new registroProductoForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegistro;
    private javax.swing.JComboBox cboAdmin;
    private javax.swing.JComboBox cbopresentacion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JButton registroProveedor;
    private javax.swing.JTextField txtAño;
    private javax.swing.JTextField txtCantidadDisp;
    private javax.swing.JTextField txtCosto;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtDia;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtMes;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPosologia;
    // End of variables declaration//GEN-END:variables

    public boolean esNumero(String str) {
        for (char c : str.toCharArray()) {
            if (!Character.isDigit(c)) {
                return false;
            }
        }
        return true;
    }
    
    public boolean contieneDigito(String str) {

        for (char c : str.toCharArray()) {
            if (Character.isDigit(c) || str.equals("")) {
                return true;
            }
        }
        return false;
    }
}
